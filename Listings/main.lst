C51 COMPILER V9.56.0.0   MAIN                                                              12/05/2020 20:37:10 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: G:\KEIL C51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\mai
                    -n.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include<reg52.h>
   2          //#include "lcd1602.h"
   3          #include "SG90.h"
   4          #include "HC_SR04.h"
   5          #include "Timer.h"
   6          #include "DataType.h"
   7          #include "delay.h"
   8          #include "TFT.h"
   9          #include<stdio.h>
  10          #include<math.h>
  11          
  12          sbit Key = P1^0;
  13          
  14          void uart_Init()
  15          {
  16   1        SCON = 0x50;
  17   1        PCON = 0x80;
  18   1        TMOD = 0x21;
  19   1        TH1 = 0xf4;
  20   1        TL1 = 0xf4;
  21   1        TR1 = 1;
  22   1        EA = 1;
  23   1      }
  24          
  25          void uart_send(char c)
  26          {
  27   1        SBUF = c;
  28   1        while(!TI);
  29   1        TI = 0;
  30   1      }
  31          
  32          void uart_string(char* str)
  33          {
  34   1        while(*str)
  35   1        {
  36   2          uart_send(*str);
  37   2          str++;
  38   2        }
  39   1      }
  40          
  41          u16 calc(u16 *dist, const int len)
  42          {
  43   1        char i, j=0, str[20];
  44   1        int min[2];
  45   1        int xdata dif[10];  //10 = len(11) - 1
  46   1        u16 x1, x2, x;
  47   1        
  48   1        min[0] = 1000;
  49   1        min[1] = 1000;
  50   1      
  51   1        //计算差值
  52   1        for(i = 0; i < len - 1; i++)
  53   1          dif[i] = dist[i + 1] - dist[i];
  54   1        //获取极小值点
C51 COMPILER V9.56.0.0   MAIN                                                              12/05/2020 20:37:10 PAGE 2   

  55   1        for(i = 0; i < len - 2; i++)
  56   1        {
  57   2          if(dif[i] <= 0 && dif[i + 1] > 0)
  58   2          {
  59   3            if(j < 2)
  60   3                min[j++] = i+1;
  61   3            else
  62   3            {
  63   4                if(dist[i+1] < dist[min[0]] && dist[min[0]] > dist[min[1]]) min[0] = i+1;
  64   4                  else if(dist[i+1] < dist[min[1]]) min[1] = i+1;
  65   4            }
  66   3          }
  67   2        }
  68   1        if(dif[0] > 0)
  69   1        {
  70   2          if(dist[0] < dist[min[0]] && dist[min[0]] > dist[min[1]]) min[0] = 0;
  71   2          if(dist[0] < dist[min[1]]) min[1] = 0;
  72   2        }
  73   1        if(dif[len-2] < 0)  
  74   1        {
  75   2          if(dist[len-1] < dist[min[0]] && dist[min[0]] > dist[min[1]]) min[0] = len-1;
  76   2          if(dist[len-1] < dist[min[1]]) min[1] = len-1;
  77   2        }
  78   1        
  79   1        //计算两物体间距
  80   1        x1 = dist[min[0]];
  81   1        x2 = dist[min[1]];
  82   1        
  83   1      //  sprintf(str, "%d\r\n", min[0]);
  84   1      //  uart_string(str);
  85   1      //  sprintf(str, "%d\r\n", min[1]);
  86   1      //  uart_string(str);
  87   1      //  sprintf(str, "x1 = %d mm\r\n", x1);
  88   1      //  uart_string(str);
  89   1      //  sprintf(str, "x2 = %d mm\r\n", x2);
  90   1      //  uart_string(str);
  91   1        
  92   1        
  93   1        x = sqrt(x1*x1+x2*x2-2*x1*x2*cos(3.141592 * 9*(min[0]-min[1]) / 180));
  94   1      //  sprintf(str, "dist = %d mm\r\n", x);
  95   1      //  uart_string(str);
  96   1        
  97   1        return x;
  98   1      }
*** WARNING C280 IN LINE 43 OF main.c: 'str': unreferenced local variable
  99          
 100          void main()
 101          {
 102   1        u16 xdata dist[22], distance;
 103   1        char i = 0, angle = -45;
 104   1        char xdata str[20];
 105   1        Timer_Init();
 106   1        
 107   1        TFT_Init();
 108   1        
 109   1        Display_ASCII8X16(10,10,"distance:");
 110   1        
 111   1        //距离测试
 112   1      //  while(1)
 113   1      //  {
 114   1      //    dist[0] = measure();
 115   1      //    sprintf(str, "%d mm\r\n", dist[0]);
C51 COMPILER V9.56.0.0   MAIN                                                              12/05/2020 20:37:10 PAGE 3   

 116   1      //    uart_Init();
 117   1      //    uart_string(str);
 118   1      //  }
 119   1      
 120   1          for(i = 0; i < 11; i++)
 121   1          {
 122   2            SGTurn(angle);
 123   2            angle += 9;
 124   2            dist[2*i] = measure();
 125   2            dist[2*i + 1] = measure();
 126   2          }
 127   1          
 128   1          for(i = 0; i < 11; i++)
 129   1          {
 130   2            dist[i] =  (dist[2*i] + dist[2*i+1])/2;
 131   2            if(dist[i] >= 1000)
 132   2              dist[i] = 1000;
 133   2            if(dist[i] <= 200)
 134   2              dist[i] = 200;
 135   2          }
 136   1          
 137   1          
 138   1      //    uart_Init();
 139   1      //    for(i = 0; i < 11; i++)
 140   1      //    {
 141   1      //      sprintf(str, "%d ", dist[i]);
 142   1      //      uart_string(str);
 143   1      //    }
 144   1      //    uart_string("\r\n");
 145   1          distance = calc(dist, 11);
 146   1          
 147   1          if(distance > 1200) distance = 1200;
 148   1          if(distance < 100) distance = 100;
 149   1          
 150   1      //    sprintf(str, "dist:%d mm  ", distance);
 151   1      //    uart_string(str);
 152   1      //    
 153   1      //    uart_string("\r\n");
 154   1          
 155   1          Display_ASCII8X16(10,42, str);
 156   1          while(1);
 157   1      }
 158            


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1417    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----      86
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      34
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
